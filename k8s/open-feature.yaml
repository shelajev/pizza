# Flags for our UI
apiVersion: core.openfeature.dev/v1beta1
kind: FeatureFlag
metadata:
  name: pizza-flags
  labels:
    app: pizza-store-service
spec:
  flagSpec:
    flags:
      v2_enabled:
        state: ENABLED
        variants:
          'true': true
          'false': false
        defaultVariant: 'false'
---
# Feature flag source custom resource, configuring flagd to source flags from FeatureFlag CRDs
apiVersion: core.openfeature.dev/v1beta1
kind: FeatureFlagSource
metadata:
  name: flag-sources
  labels:
    app: pizza-store-service
spec:
  sources:
    - source: pizza-flags
      provider: kubernetes
---
# Deployment of a demo-app using our custom resources
# apiVersion: apps/v1
# kind: Deployment
# metadata:
#   name: open-feature-demo-deployment
#   labels:
#     app: pizza-store-service
# spec:
#   replicas: 1
#   selector:
#     matchLabels:
#       app: open-feature-demo
#   template:
#     metadata:
#       labels:
#         app: open-feature-demo
#       annotations:
#         openfeature.dev/enabled: "true"
#         openfeature.dev/featureflagsource: "flag-sources"
#     spec:
#       containers:
#         - name: open-feature-demo
#           image: ghcr.io/open-feature/playground-app:v0.14.0 # x-release-please-version
#           args:
#             - flagd
#           ports:
#             - containerPort: 30000
#           env:
#             - name: FLAGD_PORT_WEB
#               value: "30002"
# ---
# # Service to expose our application
# apiVersion: v1
# kind: Service
# metadata:
#   name: open-feature-demo-app-service
#   labels:
#     app: open-feature-demo
# spec:
#   type: NodePort
#   selector:
#     app: open-feature-demo
#   ports:
#     - port: 30000
#       targetPort: 30000
#       nodePort: 30000
# ---
# # Service to expose flagd for client-side evaluations
# # Note that in production, it's recommended to run a dedicated flagd deployment to serve client-side evaluations.
# apiVersion: v1
# kind: Service
# metadata:
#   name: open-feature-demo-ui-service
#   labels:
#     app: open-feature-demo
# spec:
#   type: NodePort
#   selector:
#     app: open-feature-demo
#   ports:
#     - port: 30002
#       targetPort: 8013
#       nodePort: 30002
